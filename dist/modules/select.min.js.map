{"version":3,"sources":["modules/select.js"],"names":["angular","trigger","provider","container","this","defaults","keyboard","html","delay","multiple","allNoneButtons","sort","caretHtml","placeholder","allText","noneText","maxLength","maxLengthHtml","iconCheckmark","bodyEl","isNative","isTouch","SelectFactory","$select","$tooltip","element","options","scope","$activeIndex","config","$isMultiple","$showAllNoneButtons","$iconCheckmark","$allText","$activate","activate","index","$$postDigest","select","evt","$isActive","$isVisible","i","$selectNone","$matches","length","matches","$updateActiveIndex","b","a","controller","value","$apply","$setViewValue","hide","prefixEvent","$modelValue","$emit","map","$getIndex","minLength","$viewValue","l","indexOf","preventDefault","stopPropagation","targetEl","$onMouseDown","keyCode","$digest","_show","isUndefined","show","$element","addClass","$timeout","_hide","on","$onKeyDown","off","directive","$scope","$window","document","link","require","restrict","forEach","attr","falseValueRegExp","isDefined","dataMultiple","key","nodeName","toLowerCase","inputEl","after","test","watchedOptions","$watchCollection","parsedOptions","valuesFn","update","$parseOptions","bsOptions","ngModel","$match","newValue","oldValue","$render","values","selected","isArray","join","label","$isEmpty","$on","destroy"],"mappings":"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","file":"modules/select.min.js","sourcesContent":["'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.select', ['mgcrea.ngStrap.tooltip', 'mgcrea.ngStrap.helpers.parseOptions'])\r\n\r\n  .provider('$select', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      prefixClass: 'select',\r\n      prefixEvent: '$select',\r\n      placement: 'bottom-left',\r\n      templateUrl: 'select/select.tpl.html',\r\n      trigger: 'focus',\r\n      container: false,\r\n      keyboard: true,\r\n      html: false,\r\n      delay: 0,\r\n      multiple: false,\r\n      allNoneButtons: false,\r\n      sort: true,\r\n      caretHtml: '&nbsp;<span class=\"caret\"></span>',\r\n      placeholder: 'Choose among the following...',\r\n      allText: 'All',\r\n      noneText: 'None',\r\n      maxLength: 3,\r\n      maxLengthHtml: 'selected',\r\n      iconCheckmark: 'glyphicon glyphicon-ok'\r\n    };\r\n\r\n    this.$get = function($window, $document, $rootScope, $tooltip, $timeout) {\r\n\r\n      var bodyEl = angular.element($window.document.body);\r\n      var isNative = /(ip(a|o)d|iphone|android)/ig.test($window.navigator.userAgent);\r\n      var isTouch = ('createTouch' in $window.document) && isNative;\r\n\r\n      function SelectFactory(element, controller, config) {\r\n\r\n        var $select = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n\r\n        $select = $tooltip(element, options);\r\n        var scope = $select.$scope;\r\n\r\n        scope.$matches = [];\r\n        if (options.multiple) {\r\n          scope.$activeIndex = [];\r\n        }\r\n        else {\r\n          scope.$activeIndex = -1;\r\n        }\r\n        scope.$isMultiple = options.multiple;\r\n        scope.$showAllNoneButtons = options.allNoneButtons && options.multiple;\r\n        scope.$iconCheckmark = options.iconCheckmark;\r\n        scope.$allText = options.allText;\r\n        scope.$noneText = options.noneText;\r\n\r\n        scope.$activate = function(index) {\r\n          scope.$$postDigest(function() {\r\n            $select.activate(index);\r\n          });\r\n        };\r\n\r\n        scope.$select = function(index, evt) {\r\n          scope.$$postDigest(function() {\r\n            $select.select(index);\r\n          });\r\n        };\r\n\r\n        scope.$isVisible = function() {\r\n          return $select.$isVisible();\r\n        };\r\n\r\n        scope.$isActive = function(index) {\r\n          return $select.$isActive(index);\r\n        };\r\n\r\n        scope.$selectAll = function () {\r\n          for (var i = 0; i < scope.$matches.length; i++) {\r\n            if (!scope.$isActive(i)) {\r\n              scope.$select(i);\r\n            }\r\n          }\r\n        };\r\n\r\n        scope.$selectNone = function () {\r\n          for (var i = 0; i < scope.$matches.length; i++) {\r\n            if (scope.$isActive(i)) {\r\n              scope.$select(i);\r\n            }\r\n          }\r\n        };\r\n\r\n        // Public methods\r\n\r\n        $select.update = function(matches) {\r\n          scope.$matches = matches;\r\n          $select.$updateActiveIndex();\r\n        };\r\n\r\n        $select.activate = function(index) {\r\n          if(options.multiple) {\r\n            $select.$isActive(index) ? scope.$activeIndex.splice(scope.$activeIndex.indexOf(index), 1) : scope.$activeIndex.push(index);\r\n            if(options.sort) scope.$activeIndex.sort(function(a, b) { return a - b; }); // use numeric sort instead of default sort\r\n          } else {\r\n            scope.$activeIndex = index;\r\n          }\r\n          return scope.$activeIndex;\r\n        };\r\n\r\n        $select.select = function(index) {\r\n          var value = scope.$matches[index].value;\r\n          scope.$apply(function() {\r\n            $select.activate(index);\r\n            if(options.multiple) {\r\n              controller.$setViewValue(scope.$activeIndex.map(function(index) {\r\n                if (angular.isUndefined(scope.$matches[index])) {\r\n                  return null;\r\n                }\r\n                return scope.$matches[index].value;\r\n              }));\r\n            } else {\r\n              controller.$setViewValue(value);\r\n              // Hide if single select\r\n              $select.hide();\r\n            }\r\n          });\r\n          // Emit event\r\n          scope.$emit(options.prefixEvent + '.select', value, index, $select);\r\n        };\r\n\r\n        // Protected methods\r\n\r\n        $select.$updateActiveIndex = function() {\r\n          if(controller.$modelValue && scope.$matches.length) {\r\n            if(options.multiple && angular.isArray(controller.$modelValue)) {\r\n              scope.$activeIndex = controller.$modelValue.map(function(value) {\r\n                return $select.$getIndex(value);\r\n              });\r\n            } else {\r\n              scope.$activeIndex = $select.$getIndex(controller.$modelValue);\r\n            }\r\n          } else if(scope.$activeIndex >= scope.$matches.length) {\r\n            scope.$activeIndex = options.multiple ? [] : 0;\r\n          } else if(!controller.$modelValue && !options.multiple) {\r\n            scope.$activeIndex = -1;\r\n          }\r\n        };\r\n\r\n        $select.$isVisible = function() {\r\n          if(!options.minLength || !controller) {\r\n            return scope.$matches.length;\r\n          }\r\n          // minLength support\r\n          return scope.$matches.length && controller.$viewValue.length >= options.minLength;\r\n        };\r\n\r\n        $select.$isActive = function(index) {\r\n          if(options.multiple) {\r\n            return scope.$activeIndex.indexOf(index) !== -1;\r\n          } else {\r\n            return scope.$activeIndex === index;\r\n          }\r\n        };\r\n\r\n        $select.$getIndex = function(value) {\r\n          var l = scope.$matches.length, i = l;\r\n          if(!l) return;\r\n          for(i = l; i--;) {\r\n            if(scope.$matches[i].value === value) break;\r\n          }\r\n          if(i < 0) return;\r\n          return i;\r\n        };\r\n\r\n        $select.$onMouseDown = function(evt) {\r\n          // Prevent blur on mousedown on .dropdown-menu\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n          // Emulate click for mobile devices\r\n          if(isTouch) {\r\n            var targetEl = angular.element(evt.target);\r\n            targetEl.triggerHandler('click');\r\n          }\r\n        };\r\n\r\n        $select.$onKeyDown = function(evt) {\r\n          if (!/(9|13|38|40)/.test(evt.keyCode)) return;\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n\r\n          // release focus on tab\r\n          if (options.multiple && evt.keyCode === 9) {\r\n            return $select.hide();\r\n          }\r\n\r\n          // Select with enter\r\n          if(!options.multiple && (evt.keyCode === 13 || evt.keyCode === 9)) {\r\n            return $select.select(scope.$activeIndex);\r\n          }\r\n\r\n          if (!options.multiple) {\r\n            // Navigate with keyboard\r\n            if(evt.keyCode === 38 && scope.$activeIndex > 0) scope.$activeIndex--;\r\n            else if(evt.keyCode === 38 && scope.$activeIndex < 0) scope.$activeIndex = scope.$matches.length - 1;\r\n            else if(evt.keyCode === 40 && scope.$activeIndex < scope.$matches.length - 1) scope.$activeIndex++;\r\n            else if(angular.isUndefined(scope.$activeIndex)) scope.$activeIndex = 0;\r\n            scope.$digest();\r\n          }\r\n        };\r\n\r\n        // Overrides\r\n\r\n        var _show = $select.show;\r\n        $select.show = function() {\r\n          _show();\r\n          if(options.multiple) {\r\n            $select.$element.addClass('select-multiple');\r\n          }\r\n          // use timeout to hookup the events to prevent\r\n          // event bubbling from being processed imediately.\r\n          $timeout(function() {\r\n            $select.$element.on(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\r\n            if(options.keyboard) {\r\n              element.on('keydown', $select.$onKeyDown);\r\n            }\r\n          }, 0, false);\r\n        };\r\n\r\n        var _hide = $select.hide;\r\n        $select.hide = function() {\r\n          if(!options.multiple && !controller.$modelValue) {\r\n            scope.$activeIndex = -1;\r\n          }\r\n          $select.$element.off(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\r\n          if(options.keyboard) {\r\n            element.off('keydown', $select.$onKeyDown);\r\n          }\r\n          _hide(true);\r\n        };\r\n\r\n        return $select;\r\n\r\n      }\r\n\r\n      SelectFactory.defaults = defaults;\r\n      return SelectFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsSelect', function($window, $parse, $q, $select, $parseOptions) {\r\n\r\n    var defaults = $select.defaults;\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      require: 'ngModel',\r\n      link: function postLink(scope, element, attr, controller) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope, placeholder: defaults.placeholder};\r\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'placeholder', 'allNoneButtons', 'maxLength', 'maxLengthHtml', 'allText', 'noneText', 'iconCheckmark', 'autoClose', 'id', 'sort', 'caretHtml', 'prefixClass', 'prefixEvent'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // use string regex match boolean attr falsy values, leave truthy values be\r\n        var falseValueRegExp = /^(false|0|)$/i;\r\n        angular.forEach(['html', 'container', 'allNoneButtons', 'sort'], function(key) {\r\n          if(angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key]))\r\n            options[key] = false;\r\n        });\r\n\r\n        // Only parse data-multiple. Angular sets existence attributes to true (multiple/required/etc), they apply this\r\n        // to data-multiple as well for some reason, so we'll parse this ourselves and disregard multiple\r\n        var dataMultiple = element.attr('data-multiple');\r\n        if(angular.isDefined(dataMultiple)) {\r\n          if(falseValueRegExp.test(dataMultiple))\r\n            options.multiple = false;\r\n          else\r\n            options.multiple = dataMultiple;\r\n        }\r\n\r\n        // Add support for select markup\r\n        if(element[0].nodeName.toLowerCase() === 'select') {\r\n          var inputEl = element;\r\n          inputEl.css('display', 'none');\r\n          element = angular.element('<button type=\"button\" class=\"btn btn-default\"></button>');\r\n          inputEl.after(element);\r\n        }\r\n\r\n        // Build proper bsOptions\r\n        var parsedOptions = $parseOptions(attr.bsOptions);\r\n\r\n        // Initialize select\r\n        var select = $select(element, controller, options);\r\n\r\n        // Watch bsOptions values before filtering for changes\r\n        var watchedOptions = parsedOptions.$match[7].replace(/\\|.+/, '').trim();\r\n        scope.$watchCollection(watchedOptions, function(newValue, oldValue) {\r\n          // console.warn('scope.$watch(%s)', watchedOptions, newValue, oldValue);\r\n          parsedOptions.valuesFn(scope, controller)\r\n          .then(function(values) {\r\n            select.update(values);\r\n            controller.$render();\r\n          });\r\n        });\r\n\r\n        // Watch model for changes\r\n        scope.$watch(attr.ngModel, function(newValue, oldValue) {\r\n          // console.warn('scope.$watch(%s)', attr.ngModel, newValue, oldValue);\r\n          select.$updateActiveIndex();\r\n          controller.$render();\r\n        }, true);\r\n\r\n        // Model rendering in view\r\n        controller.$render = function () {\r\n          // console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\r\n          var selected, index;\r\n          if(options.multiple && angular.isArray(controller.$modelValue)) {\r\n            selected = controller.$modelValue.map(function(value) {\r\n              index = select.$getIndex(value);\r\n              return angular.isDefined(index) ? select.$scope.$matches[index].label : false;\r\n            }).filter(angular.isDefined);\r\n            if(selected.length > (options.maxLength || defaults.maxLength)) {\r\n              selected = selected.length + ' ' + (options.maxLengthHtml || defaults.maxLengthHtml);\r\n            } else {\r\n              selected = selected.join(', ');\r\n            }\r\n          } else {\r\n            index = select.$getIndex(controller.$modelValue);\r\n            selected = angular.isDefined(index) ? select.$scope.$matches[index].label : false;\r\n          }\r\n          element.html((selected ? selected : options.placeholder) + (options.caretHtml ? options.caretHtml : defaults.caretHtml));\r\n        };\r\n\r\n        if(options.multiple){\r\n          controller.$isEmpty = function(value){\r\n            return !value || value.length === 0;\r\n          };\r\n        }\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if (select) select.destroy();\r\n          options = null;\r\n          select = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n"],"sourceRoot":"/source/"}